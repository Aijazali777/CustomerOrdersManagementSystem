@{
    Layout = "_LayoutAdmin";
}

<div>
    @(Html.DevExtreme().FilterBuilder<Customer>()
            .ID("FilterBuilder")
            .Fields(fields =>
            {
                fields.AddFor(f => f.Id);
                fields.AddFor(f => f.Name);
                fields.AddFor(f => f.Password);
                fields.AddFor(f => f.Gender);
                fields.AddFor(f => f.Phone);
                fields.AddFor(f => f.Address);
                fields.AddFor(f => f.City);
                fields.AddFor(f => f.Country);
            })
            .OnValueChanged("onFilterChanged")
    )

    @(Html.DevExtreme().DataGrid<Customer>()
            .ID("CustomerGrid")
            .DataSource(ds => ds.Mvc()
                .Controller("Customers")
                .LoadAction("Get")
                .InsertAction("Post")
                .UpdateAction("Put")
                .DeleteAction("Delete")
                .Key("Id")
            )
            .RemoteOperations(true)
            .ShowBorders(true)
            .Height(855)
            .Columns(columns =>
            {
                columns.AddFor(m => m.Id).AllowEditing(false);

                columns.AddFor(m => m.Name);

                columns.AddFor(m => m.Password);

                columns.AddFor(m => m.Gender);

                columns.AddFor(m => m.Phone);

                columns.AddFor(m => m.Address);

                columns.AddFor(m => m.City);

                columns.AddFor(m => m.Country);
            })
            .Editing(e => e
                .AllowAdding(true)
                .AllowUpdating(true)
                .AllowDeleting(true)
            )
    )
</div>

<script>
    function onFilterChanged(e) {
        var dataGrid = $("#CustomerGrid").dxDataGrid("instance");
        dataGrid.option("filterValue", e.component.option("value"));
    }
</script>